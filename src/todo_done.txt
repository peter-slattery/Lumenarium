x saving animation timelines
x Buckets & Lists
    x On second thought, I just really don't like these. Lets get rid of them, and put custom structures in place


BUGS
x if there is nothing in the filtered list when searching for a node, hitting enter still selects one
x Search lister - returning from a filtered list that has zero elements to one that has a few, hotItem = -1

Intermediate Lifetime Memory & Operations
x Intermediate lifetime memory arena
x Temporary memory region = a multi frame operation
x Concept of an operation - temporary memory + interface command registry
x Allow one operation at a time at first
x Push/pop operations on a list?
- Current Operations:
-   - View Sculpture (this might be an exception since its so central)
-     x View/Edit Nodes
-        x Add Node (needs nesting)
-     x View SACN
x make modes work with hot code reloading: rather than do the whole series of initialize command registry,
x   and manually adding each command, store the commands as an array, and auto iterate over them when you
x   push the mode on the mode stack
x decided I don't like storing NodeRenderSettings in each operation mode. Probably want to put it back in   x   app_state

UI Improvements
x print node field names on hover or on the node

API Improvements
x Clean up DrawString... good lord
x Add Text Alignment to DrawString
x Move nodes over to referencing eachother based on a UID system

/Debug
x Make debug scope tracking thread safe - was throwing an error in stringsequal but that stopped.
x    Keep an eye out.
x Sort Scope Tracking
x got the profiler view rudimentarily working
x reimplement the scope list view.
x start tracking debug interface state somehow and it would be good to separate that out from global debug state

Switch To Nodes
x basic node elements
x output should generate a node_specification
x go back to calling SpecificationIndex Type
-     x don't pull node names into the struct, just reference the specification
-     x separate storage of node headers from connections
-     x connections shouldn't store their own values, they should just point into permanent storage

Hardening
x input context changes

Animation Timeline
x drag ends of animation clips to change start and end times
x click to drag time marker